<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>abs_3d_object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make me a dino
td_queueFrames(td_get_anim_prefix(spr_rex_0))
movement_speed = 10;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup editor
global.focus = self
selected = -1;

index = 0
i = 0
while (object_exists(index)) {
    prefix = string_copy(object_get_name(index), 0, 3);
    if (prefix != "abs" &amp;&amp; prefix != "dev" &amp;&amp; prefix != "prt") {
        objects[i] = index;
        i++
    }
    index++
}


for (z = 0; z &lt; array_length_1d(objects); z++) {
    b = instance_create(window_get_width()-200, 20*z, dev_object_selector)
    b.object = objects[z];
    b.width = 200;
    b.height = 20;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotate</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fix Collision Mask
sprite_index = object_get_sprite(selected);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dino/Cam Controls
anim_angle = point_direction(x, y, mouse_x, mouse_y);

if keyboard_check(ord('W')) || 
    keyboard_check(ord('S')) || 
    keyboard_check(ord('A')) || 
    keyboard_check(ord('D')) {
    anim_speed = 8/room_speed;
} else {
    anim_speed = 0;
    anim_index = 0;
}

if keyboard_check(vk_shift) {
    movement_speed = 100;
} else {
    movement_speed = 10
}

if keyboard_check(ord('W')) {
    x += movement_speed*dsin(view_angle) 
    y += -movement_speed*dcos(view_angle)
    if (y &lt; 0) y = 0
} else if keyboard_check(ord('S')) {
    x += -movement_speed*dsin(view_angle) 
    y += movement_speed*dcos(view_angle)
    if (y &gt; room_height) y = room_height
}

if keyboard_check(ord('A')) {
    x += -movement_speed*dcos(view_angle) 
    y += -movement_speed*dsin(view_angle)
    if (x &lt; 0) x = 0
} else if keyboard_check(ord('D')) {
    x += movement_speed*dcos(view_angle) 
    y += movement_speed*dsin(view_angle)
    if (x &gt; room_width) x = room_width
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object creator
model_here = place_meeting(mouse_x, mouse_y, dev_model)

if keyboard_check(ord('Q')) {
    rotate++
}
if keyboard_check(ord('E')) {
    rotate--
}

if selected != -1 &amp;&amp; mouse_check_button_pressed(mb_left) {
    if (device_mouse_x_to_gui(0) &lt; display_get_gui_width() - 200) {
        if(keyboard_check(vk_shift) || !model_here) {
            if(keyboard_check(vk_control)) {
                m = instance_create(floor(mouse_x/32)*32,
                                     floor(mouse_y/32)*32, 
                                     dev_model)
            } else {
                m = instance_create(mouse_x, mouse_y, dev_model)
            }
            m.object = selected
            m.rotate = rotate
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the dino
td_render(x + anim_x_offset, y + anim_y_offset, image_xscale, image_yscale, anim_angle , anim_height, anim_sink, frames[anim_index], image_alpha, c_white)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw selected object under the cursor
if selected != -1 {
    spr = object_get_sprite(selected);
    if(keyboard_check(vk_shift) &amp;&amp; model_here) {
        c = c_green;
    }else if(model_here) {
        c = c_red;
    } else {
        c = c_white;
    }
    render_x = 0
    render_y = 0
    if(keyboard_check(vk_control)) {
        render_x = floor(mouse_x/32)*32
        render_y = floor(mouse_y/32)*32
    } else {
        render_x = mouse_x
        render_y = mouse_y
    }
    if(object_is_ancestor(selected, abs_3d_object)) {
        td_render(render_x, render_y, global.scale, global.scale, rotate, 0, 0, spr, 0.5, c);
    } else {
        draw_sprite_ext(spr, 0, render_x, render_y, global.scale, global.scale, rotate, c_white, 0.5);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save Level
name = get_string("Save as?", "") + ".level";
if name != ".level" {
    save_level(name);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
